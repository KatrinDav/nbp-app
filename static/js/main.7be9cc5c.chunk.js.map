{"version":3,"sources":["components/ErrorPanel.js","components/ResultPanel.js","components/Title.js","components/Option.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["ErrorPanel","className","Result","rate","date","table","Title","Option","value","name","Form","changeFn","currencies","resetFn","submitFn","changeDateFn","day","currency","code","mid","map","item","key","onSubmit","onChange","type","onClick","App","Date","toISOString","slice","state","tableNo","err","handleSelect","e","setState","target","handleDateChange","handleReset","prevState","handleButton","preventDefault","fetch","then","response","ok","Error","json","data","console","log","rates","effectiveDate","no","catch","this","ResultPanel","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7be9cc5c.chunk.js","sourcesContent":["import React from \"react\";\r\nconst ErrorPanel = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <h3 className=\"red\">\r\n                Brak tabeli dla wskazanego dnia! Wybierz inną datę!\r\n      </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorPanel;\r\n","import React from \"react\";\r\nconst Result = ({ rate, date, table }) => {\r\n    return (\r\n        <div className=\"main\">\r\n            <h3>\r\n                Kurs średni NBP: <span>{rate}</span>{\" \"}\r\n            </h3>\r\n            <h3>\r\n                z dnia: <span>{date}</span>{\" \"}\r\n            </h3>\r\n            <h3>\r\n                tabela Nr: <span>{table}</span>\r\n            </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Result;","import React from 'react';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <>\r\n            <h1>Sprawdź kurs średni NBP dla wybranej waluty</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nconst Option = ({ value, name }) => {\r\n    return (\r\n        <>\r\n            <option value={value}>\r\n                {value} - {name}\r\n            </option>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Option;","import React from 'react';\r\nimport Option from './Option';\r\n\r\nconst Form = ({ value, changeFn, currencies, resetFn, submitFn, changeDateFn, day }) => {\r\n\r\n    currencies[26] = { currency: \"rand (RPA)\", code: \"ZAR\", mid: \"\" };\r\n    currencies[32] = { currency: \"won (płd. Korea)\", code: \"KRW\", mid: \"\" };\r\n    currencies = currencies.map(item => (\r\n        <Option key={item.code} value={item.code} name={item.currency} />\r\n    ));\r\n    return (\r\n        <>\r\n            <form className=\"select\" onSubmit={submitFn}>\r\n                <h2>Wybierz walutę:</h2>\r\n                <select value={value} onChange={changeFn}>\r\n                    {currencies}\r\n                </select>\r\n                <br />\r\n                <h2>Wybierz datę:</h2>\r\n                <input\r\n                    type=\"date\"\r\n                    value={day}\r\n                    onChange={changeDateFn}\r\n                />\r\n                <br />\r\n\r\n                <button type=\"submit\"\r\n                >sprawdź</button>\r\n                <button type=\"reset\" className=\"reset\" onClick={resetFn}>\r\n                    resetuj\r\n              </button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport './style/App.css';\nimport ErrorPanel from \"./components/ErrorPanel\";\nimport ResultPanel from \"./components/ResultPanel\";\nimport Title from './components/Title';\nimport Form from './components/Form';\n\nclass App extends Component {\n  day = new Date().toISOString().slice(0, 10);\n  state = {\n    value: \"\",\n    currencies: [],\n    day: this.day,\n    rate: \"\",\n    date: \"\",\n    tableNo: \"\",\n    err: false\n  };\n  handleSelect = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n  handleDateChange = e => {\n    this.setState({\n      day: e.target.value\n    });\n  };\n  handleReset = () => {\n    this.setState(prevState => ({\n      value: \"eur\",\n      day: this.day,\n      rate: \"\",\n      date: \"\",\n      tableNo: \"\",\n      err: false\n    }));\n  };\n  handleButton = (e) => {\n    e.preventDefault();\n    fetch(\n      `https://api.nbp.pl/api/exchangerates/rates/a/${this.state.value}/${\n      this.state.day\n      }`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"nie udało się!\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState(prevState => ({\n          rate: data.rates[0].mid,\n          date: data.rates[0].effectiveDate,\n          tableNo: data.rates[0].no\n        }));\n      })\n      .catch(err => {\n        this.setState(prevState => ({\n          err: !this.state.err\n        }));\n      });\n\n\n  };\n\n  componentDidMount() {\n    fetch(\"https://api.nbp.pl/api/exchangerates/tables/a/?format=json\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          currencies: data[0].rates\n        });\n      });\n  }\n\n  render() {\n    let currencies = this.state.currencies;\n\n    const { value, day, rate, date, tableNo, err } = this.state;\n    return (\n      <>\n        <div className=\"wrapper\">\n          <div className=\"app\">\n            <Title />\n            <Form\n              submitFn={this.handleButton}\n              changeFn={this.handleSelect}\n              changeDateFn={this.handleDateChange}\n              resetFn={this.handleReset}\n              value={value}\n              day={day}\n              currencies={currencies}\n            />\n\n            {rate && !err && (\n              <ResultPanel\n                rate={rate}\n                date={date}\n                table={tableNo}\n              />\n            )}\n            {err && <ErrorPanel />}\n          </div>\n          <div className=\"image\" />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}